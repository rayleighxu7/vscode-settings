// Place your key bindings in this file to override the defaults
[
    // settings for interactive cell
    {
        "key": "ctrl+3",
        "command": "editor.action.insertSnippet",
        "args": { "snippet": "# %%"},
        "when": "editorTextFocus && editorLangId == 'python'"
    },
    {
        "key": "cmd+enter",
        "command": "jupyter.runcurrentcell",
        "when": "editorTextFocus && editorLangId == 'python'"
    },
    // settings for jupyter notebook
    {
        "key": "ctrl+3",
        "command": "notebook.cell.split",
        "when": "notebookEditorFocused && editorLangId == 'python'"
    },
    {
        "key": "cmd+enter",
        "command": "notebook.cell.execute",
        "when": "notebookEditorFocused && editorLangId == 'python'"
    },
    { 
        "key": "ctrl+-",
        "command": "notebook.cell.joinAbove",
        "when": "notebookEditorFocused && editorLangId == 'python'"
    },
    { 
        "key": "ctrl+=",
        "command": "notebook.cell.joinAbove",
        "when": "notebookEditorFocused && editorLangId == 'python'"
    },
    {
        "key": "shift+cmd+enter",
        "command": "jupyter.runallcells",
    },
    {
        "key": "alt+delete",
        "command": "-notebook.cell.clearOutputs",
        "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "shift+enter",
        "command": "-notebook.cell.executeAndSelectBelow",
        "when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
    },
    {
        "key": "shift+enter",
        "command": "-notebook.cell.executeAndSelectBelow",
        "when": "notebookCellListFocused && !interactiveEditorFocused && notebookCellType == 'code' || editorTextFocus && inputFocus && notebookEditorFocused && !interactiveEditorFocused"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "shift+enter",
        "command": "-python.execInREPL",
        "when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-jupyter.execSelectionInteractive",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !isCompositeNotebook && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-jupyter.runcurrentcelladvance",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !isCompositeNotebook && !notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-jupyter.runAndDebugCell",
        "when": "isWorkspaceTrusted && jupyter.ispythonnotebook && !notebookKernel && notebookCellType == 'code' || isWorkspaceTrusted && jupyter.ispythonnotebook && notebookCellType == 'code' && notebookKernel =~ /^ms-toolsai.jupyter\\// && resource not in 'jupyter.notebookeditor.debugDocuments'"
    },
    {
        "command": "runCommands",
        "key": "shift+cmd+r",
        "args": {
            "commands": [
                "jupyter.restartkernel", 
                "notebook.clearAllCellsOutputs"
            ]
        }
    },
    {
        "key": "shift+cmd+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "shift+cmd+r",
        "command": "-rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
]

